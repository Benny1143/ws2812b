module shl (
    input a[32],
    input b[5],
    output shift[32]
  ) {

  sig w[32];
  sig x[32];
  sig y[32];
  sig z[32];
   

  always {

    case(b[4]){ // shift 16 bit
      b0:
        w = a;

      b1:
        w[31:16] = a[15:0];
        w[15:0] = 16b0;

      default:
        w = a;

    }

    case(b[3]){ // shift 8 bit
      b0:
        x = w;

      b1:
        x[31:8] = w[23:0];
        x[8:0] = 8b0;

      default:
        x = w;

    }

    case(b[2]){ // shift 4 bit
      b0:
        y = x;

      b1:
        y[31:4] = x[27:0];
        y[3:0] = 4b0;

      default:
        y = x;

    }
    
    case(b[1]){ //shift 2 bit
      b0:
        z = y;

      b1:
        z[31:2] = y[29:0];
        z[1:0] = 2b0;

      default:
        z = y;

    }

    case(b[0]){ //shift 1 bit
      b0:
        shift = z;

      b1:
        shift[31:1] = z[30:0];
        shift[0] = b0;

      default:
        shift = z;

    }






  }
}

